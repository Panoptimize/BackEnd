name: Continuous Deployment Pipeline
on:
  push:
    branches:
      - main

env:
  REGION: us-central1
  PORT: 8080

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_SERVICE_ACCOUNT_KEY }}
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Auth With GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCR_SERVICE_ACCOUNT_KEY }}'

      - name: Build and push Docker image to Artifact Registry
        env:
          ARTIFACT_REGISTRY_REGION: ${{ env.REGION }}
          REGION: "${{ env.REGION }}"
          GAR_LOCATION: ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.GAR_NAME }} .
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.GAR_NAME }} ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.GAR_NAME }}:$GITHUB_SHA
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.GAR_NAME }}:$GITHUB_SHA
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.GAR_NAME }}:latest



      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ vars.GAR_NAME }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.GAR_NAME }} \
            --set-env-vars MYSQL_HOST=${{ secrets.MYSQL_HOST }},MYSQL_USER=${{ secrets.MYSQL_USER }},MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }},AWS_REGION=${{ vars.AWS_REGION }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},FIREBASE_ID=${{ secrets.FIREBASE_ID }},API_KEY=${{ secrets.API_KEY }} \
            --platform=managed \
            --port=${{ env.PORT }} \
            --region=${{ env.REGION }} \
            --allow-unauthenticated \
